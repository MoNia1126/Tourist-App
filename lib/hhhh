import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:tourist_app/models/landmark_model.dart';
import 'package:tourist_app/views/blocs/landmarks/landmarks_bloc.dart';
import 'package:tourist_app/views/blocs/landmarks/landmarks_state.dart';
import 'package:tourist_app/views/widgets/landmarks_grid_view.dart';
import 'package:tourist_app/views/widgets/landmarks_list_view.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';

class LandmarksScreen extends StatefulWidget {
  const LandmarksScreen({
    super.key,
  });

  @override
  State<LandmarksScreen> createState() => _LandmarksScreenState();
}

class _LandmarksScreenState extends State<LandmarksScreen> {
  @override
  Widget build(BuildContext context) {
    return BlocBuilder<LandmarksBloc, LandmarksState>(
      builder: (context, state) {
        if (state is LandmarksLoading) {
          return const Center(child: CircularProgressIndicator());
        } else if (state is LandmarksLoaded) {
          // Define the list of tabs
          List<Widget> tabs = [
            LandmarksGridView(landmarks: state.landmarks),
            LandmarksListView(landmarks: state.landmarks),
          ];

          return DefaultTabController(
            length: tabs.length,
            child: Scaffold(
              appBar: AppBar(
                title: Text(AppLocalizations.of(context)!.landmarks),
                bottom: TabBar(
                  labelColor: Colors.white,
                  unselectedLabelColor: Colors.black,
                  indicatorColor: Colors.black,
                  tabs: [
                    Tab(
                      text: AppLocalizations.of(context)!.suggestedLandmarks,
                    ),
                    Tab(
                      text: AppLocalizations.of(context)!.popularPlaces,
                    ),
                  ],
                ),
              ),
              body: TabBarView(
                children: tabs,
              ),
            ),
          );
        } else if (state is LandmarksError) {
          return Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Text("Error: ${state.message}"),
                const SizedBox(height: 20),
                ElevatedButton(
                  onPressed: () {
                    // Trigger the FetchLandmarks event to retry loading data
                    context.read<LandmarksBloc>().add(FetchLandmarks());
                  },
                  child: Text(AppLocalizations.of(context)!.retry),
                ),
              ],
            ),
          );
        } else {
          return const Center(child: Text('Unknown State'));
        }
      },
    );
  }
}








import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:provider/provider.dart';
import 'package:dio/dio.dart';
import 'package:tourist_app/services/user_services.dart';
import 'package:tourist_app/services/landmark_service.dart';
import 'package:tourist_app/views/blocs/landmarks/landmarks_bloc.dart';
import 'package:tourist_app/views/blocs/theme/theme_bloc.dart';
import 'package:tourist_app/views/blocs/theme/theme_state.dart';
import 'package:tourist_app/views/cubits/changeLanguage/change_language_cubit.dart';
import 'package:tourist_app/views/cubits/changeLanguage/change_language_state.dart';
import 'package:tourist_app/views/screens/splash_screen.dart';
import 'package:tourist_app/views/blocs/auth/auth_bloc.dart';
import 'package:tourist_app/views/screens/home_screen.dart';
import 'package:tourist_app/views/blocs/profile/profile_bloc.dart';
import 'package:tourist_app/views/blocs/profile/profile_event.dart';
import 'package:tourist_app/views/screens/login_screen.dart';
import 'package:flutter_gen/gen_l10n/app_localizations.dart';

void main() {
  runApp(AppProviders());
}

class AppProviders extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final dio = Dio(); // إنشاء مثيل من Dio
    final landmarksService = LandmarksService(dio: dio); // تهيئة LandmarksService

    return MultiProvider(
      providers: [
        BlocProvider(
          create: (context) => AuthBloc(UserService()),
        ),
        Provider(
          create: (context) => UserService(),
        ),
        BlocProvider(
          create: (context) => ThemeBloc(),
        ),
        BlocProvider(
          create: (context) => ChangeLanguageCubit(),
        ),
        BlocProvider(
          create: (context) =>
              ProfileBloc(context.read<UserService>())..add(LoadProfile()),
        ),
        BlocProvider(
          create: (context) => LandmarksBloc(landmarksService: landmarksService),
        ),
      ],
      child: MyApp(),
    );
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<ChangeLanguageCubit, ChangeLanguageState>(
      builder: (context, state) {
        return BlocBuilder<ThemeBloc, ThemeState>(
          builder: (context, themeState) {
            return MaterialApp(
              debugShowCheckedModeBanner: false,
              title: 'Tourist App',
              theme: ThemeData(
                colorScheme: ColorScheme.fromSeed(seedColor: Colors.brown),
                useMaterial3: true,
                inputDecorationTheme: const InputDecorationTheme(
                  errorStyle: TextStyle(fontWeight: FontWeight.bold),
                ),
                fontFamily: 'Lora',
              ),
              localizationsDelegates: AppLocalizations.localizationsDelegates,
              supportedLocales: AppLocalizations.supportedLocales,
              home: SplashScreen(),
              routes: {
                '/login': (context) => LoginScreen(),
                '/home': (context) => HomeScreen(),
              },
            );
          },
        );
      },
    );
  }
}